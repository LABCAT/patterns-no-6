{"version":3,"sources":["js/lib/p5.pattern.js","js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ColourCalculators.js","js/classes/PatternCell.js","audio/patterns-no-6.ogg","audio/patterns-no-6.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["PatternControler","this","x","y","w","h","colors","angle","patternFunction","renderTarget","PatternVertexInfo","verticies","isCurve","curveAreaMult","window","p5","prototype","patternAngle","_angle","setPatternFunction","_func","applyPattern","_x","_y","_w","_h","_renderTarget","_setPatternArea","_setRenderTarget","_drawPattern","patternColors","_colsArr","Array","isArray","slice","length","rt","func","_flatFill","rotatedFunc","_rotatedFuncGen","pRectMode","_renderer","_rectMode","pEllipseMode","_ellipseMode","push","drawingContext","clip","translate","pop","rectMode","ellipseMode","_ptnFunc","_rt","p1","createVector","rotate","p2","nw","Math","max","abs","nh","c","CORNER","fill","noStroke","rect","reset","addVertex","addCurveVertex","addBezierVertex","x2","y2","x3","y3","x4","y4","addQuadraticVertex","cx","cy","culclateArea","minx","maxx","miny","maxy","i","nx","ny","min","_patternControler","_patternVertexInfo","pattern","_modeAdjust","a","b","d","mode","CORNERS","RADIUS","CENTER","_disableColor","rectPattern","args","r","val","arguments","squarePattern","square","ellipsePattern","ellipse","arcPattern","arc","circlePattern","circle","trianglePattern","triangle","quadPattern","quad","minX","maxX","minY","maxY","beginShapePattern","beginShape","beginContourPattern","beginContour","vertexPattern","vertex","curveVertexPattern","curveVertex","bezierVertexPattern","bezierVertex","quadraticVertexPattern","quadraticVertex","endContourPattern","endContour","endShapePattern","endShape","area","PTN","noise","_density","density","constrain","num","ns","random","dia","noiseGrad","randomGaussian","stripe","_space","count","ceil","stripeCircle","_minRadius","maxRadius","sqrt","radius","stripePolygon","_vertNum","vNum","int","rad","PI","cos","sin","CLOSE","stripeRadial","_angleSpan","tau","_angleMode","DEGREES","TAU","endRad","wave","_waveW","_waveH","_weight","vertSpan","tileColours","_customTiling","_spaceX","_spaceY","_tileFunc","_useOffset","yi","xi","dot","_dia","checked","cross","_triW","_triH","PlayIcon","id","className","xmlns","height","viewBox","width","TetradicColourCalculator","hue","saturation","brightness","set","colour","color","PatternCell","palette","canExpand","p","patternColours","shuffle","patternActive","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","noteSet1","tracks","notes","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","time","addCue","gridCoords","gridCells","expandingCellIndex","expandingCell","setup","createCanvas","colorMode","HSB","background","j","draw","isPlaying","cell","update","executeCueSet1","duration","delayAmount","parseInt","floor","randPattern","cells","setTimeout","t","selectedIndexes","allPatterns","patterns","forEach","index","randIndex","hasStarted","mousePressed","pause","currentTime","buffer","dataLayer","title","location","href","addClass","play","creditsLogged","console","log","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c7af96c0.chunk.js","sourcesContent":["// p5.Pattern\n// MIT License\n// Copyright (c) 2021 Taichi Sayama\n// A pattern drawing library for p5.js.\nimport * as p5 from \"p5\";\n\n// ---------------------------------------------------------------------------\n// PatternControler Calss\n// ---------------------------------------------------------------------------\n\nfunction PatternControler()\n{\n    this.x = 0;\n    this.y = 0;\n    this.w = 0;\n    this.h = 0;\n    this.colors = ['#FFFFFF', '#000000'];\n    this.angle = 0;\n    this.patternFunction = null;\n    this.renderTarget = null;\n}\n\n// ---------------------------------------------------------------------------\n\n/*\nFunction to change the amount of pattern rotation.\nUse patternAngle() to check current angle.\n*/\nPatternControler.prototype.patternAngle = function(_angle)\n{\n    if(typeof(_angle) === 'number') this.angle = _angle;\n    return this.angle;\n}\n\n\n/*\nFunction to set the drawing function.\n*/\nPatternControler.prototype.setPatternFunction = function(_func)\n{\n    if(typeof(_func) !== 'function')return false;\n    this.patternFunction = _func;\n    return this.patternFunction;\n};\n \n\n/**\n * Function to set parameters and draw pattern.\n * @param {Number} _x   x-coordinate of the corner of pattern \n * @param {Number} _y   y-coordinate of the corner of pattern \n * @param {Number} _w   width of the pattern\n * @param {Number} _h   height of the pattern\n * @param {} _renderTarget \n */\nPatternControler.prototype.applyPattern = function(_x, _y, _w, _h, _renderTarget)\n{\n    this._setPatternArea(_x, _y, _w, _h);\n    this._setRenderTarget(_renderTarget);\n    this.renderTarget = _renderTarget;\n    this._drawPattern();\n}\n\n/**\n * Function to set the color palette of the pattern.\n * Use patternColors() to check current palette.\n * @param {Array} _colsArr \n */\nPatternControler.prototype.patternColors = function(_colsArr)\n{\nif(Array.isArray(_colsArr))this.colors = _colsArr;\n//return this.colors;\nreturn this.colors.slice(0, this.colors.length);\n}\n\n\n\n// ---------------------------------------------------------------------------\n//Private functions\n\n/*\nFunction to change the drawing range of a pattern\n*/\nPatternControler.prototype._setPatternArea = function(_x, _y, _w, _h)\n{\n    this.x = _x;\n    this.y = _y;\n    this.w = _w;\n    this.h = _h;\n};\n\n/*\nFunction to set the pattern target.\n*/\nPatternControler.prototype._setRenderTarget = function(_renderTarget)\n{\n    this.renderTarget = _renderTarget;\n};\n\n/*\nFunction to draw the pattern.\n*/\nPatternControler.prototype._drawPattern = function()\n{\n    const rt = this.renderTarget;\n\n    //Generate a drawing function. apply rotation\n    const func = typeof(this.patternFunction) === 'function' ?\n    this.patternFunction : this._flatFill();\n\n    const rotatedFunc = this._rotatedFuncGen(func, this.angle);\n    \n    //cache renderMode\n    const pRectMode = rt._renderer._rectMode;\n    const pEllipseMode = rt._renderer._ellipseMode;\n\n    //draw\n    rt.push();\n    rt.drawingContext.clip();\n    rt.translate(this.x, this.y);\n    rotatedFunc(this.w, this.h, rt);\n    rt.pop();\n\n    //reset renderMode\n    rt.rectMode(pRectMode);\n    rt.ellipseMode(pEllipseMode);\n};\n\n/*\nGenerate a drawing function with rotation applied.\n*/\nPatternControler.prototype._rotatedFuncGen = function(_ptnFunc, _angle)\n{\n    const func = function(_w, _h, _rt)\n    {\n        //Calculate the new size according to the rotation angle.\n        const p1 = _rt.createVector(-_w/2, _h/2).rotate(_angle);\n        const p2 = _rt.createVector(_w/2, _h/2).rotate(_angle);\n        const nw = Math.max(Math.abs(p1.x), Math.abs(p2.x)) * 2;\n        const nh = Math.max(Math.abs(p1.y), Math.abs(p2.y)) * 2;\n\n        _rt.push();\n        _rt.translate(_w / 2, _h / 2);\n        _rt.rotate(_angle);\n        _rt.translate(-nw / 2, -nh / 2);\n        _ptnFunc(nw, nh, _rt);\n        _rt.pop();\n    }\n\n    return func;\n};\n\n/*\nDefault pattern function. \n*/\nPatternControler.prototype._flatFill = function()\n{\n    const c = this.patternColors();\n\n    return function(_w, _h, _rt)\n    {\n        _rt.rectMode(_rt.CORNER);\n        _rt.fill(c[0]);\n        _rt.noStroke();\n        _rt.rect(0, 0, _w, _h);\n    }\n};\n\n\n\n// ---------------------------------------------------------------------------\n// Vertex Infomation Class\n// ---------------------------------------------------------------------------\n\nfunction PatternVertexInfo()\n{\n    this.verticies = [];\n    this.isCurve = false;\n    this.curveAreaMult = 1.25;\n}\n\n// ---------------------------------------------------------------------------\n\nPatternVertexInfo.prototype.reset = function()\n{\n    this.verticies = [];\n    this.isCurve = false;\n};\n\nPatternVertexInfo.prototype.addVertex = function(x, y)\n{\n    this.verticies.push([x, y]);\n};\n\nPatternVertexInfo.prototype.addCurveVertex = function(x, y)\n{\n    this.addVertex(x, y);\n    this.isCurve = true;\n};\n\nPatternVertexInfo.prototype.addBezierVertex = function(x2, y2, x3, y3, x4, y4)\n{\n    this.addVertex(x2, y2);\n    this.addVertex(x3, y3);\n    this.addVertex(x4, y4);\n};\n\nPatternVertexInfo.prototype.addQuadraticVertex = function(cx, cy, x3, y3)\n{\n    this.addVertex(cx, cy);\n    this.addVertex(x3, y3);\n};\n\nPatternVertexInfo.prototype.culclateArea = function()\n{\n    let minx = this.verticies[0][0];\n    let maxx = minx;\n    let miny = this.verticies[0][1];\n    let maxy = miny;\n\n    for(let i = 0; i < this.verticies.length; i++)\n    {\n       let nx =  this.verticies[i][0];\n       let ny =  this.verticies[i][1];\n\n       minx = Math.min(minx, nx);\n       maxx = Math.max(maxx, nx);\n       miny = Math.min(miny, ny);\n       maxy = Math.max(maxy, ny);\n    }\n\n    let w = maxx - minx;\n    let h = maxy - miny;\n    let cx = w / 2 + minx;\n    let cy = h / 2 + miny;\n    \n    if(this.isCurve)\n    {\n        w *= this.curveAreaMult;\n        h *= this.curveAreaMult;\n    }\n\n    let x = cx - w /2;\n    let y = cy - h /2;\n\n    const area = {x : x, y : y, w : w, h : h};\n\n    return area;\n};\n\n\n\n// ---------------------------------------------------------------------------\n// p5 extentions\n// ---------------------------------------------------------------------------\n\n\np5.prototype._patternControler = new PatternControler(); \np5.Graphics.prototype._patternControler = new PatternControler();\n\np5.prototype._patternVertexInfo = new PatternVertexInfo();\np5.Graphics.prototype._patternVertexInfo = new PatternVertexInfo();\n\n\n/**\n * Function to change the amount of pattern rotation.\n * Use patternAngle() to check current angle.\n * @param {Number} _angle  the angle of rotation, \n * specified in radians or degrees, depending on current angleMode\n */\np5.prototype.patternAngle = function(_angle)\n{\n    return this._patternControler.patternAngle(_angle);\n};\n\n\n/**\n * Function to set the color palette of the pattern.\n * Use patternColors() to check current palette.\n * @param {Array} _colsArr \n */\np5.prototype.patternColors = function(_colsArr)\n{\n    return this._patternControler.patternColors(_colsArr);\n};\n\n\n/**\n * Function to set the pattern\n * @param  {function} _func     Pattern drawing function.\n */\np5.prototype.pattern = function(_func)\n{\n    return this._patternControler.setPatternFunction(_func);\n};\n\n\n// ---------------------------------------------------------------------------\n//Shape functions\n\n(function()\n{\n    /*\n    Functions to adjust coordinate data\n    */\n    const _modeAdjust = function(a, b, c, d, mode)\n    {\n        if (mode === p5.prototype.CORNER) {\n        return { x: a, y: b, w: c, h: d };\n        } else if (mode === p5.prototype.CORNERS) {\n        return { x: a, y: b, w: c - a, h: d - b };\n        } else if (mode === p5.prototype.RADIUS) {\n        return { x: a - c, y: b - d, w: 2 * c, h: 2 * d };\n        } else if (mode === p5.prototype.CENTER) {\n        return { x: a - c * 0.5, y: b - d * 0.5, w: c, h: d };\n        }\n    };\n\n    /*\n    Function to disable drawing of fills and stroke.\n    */\n    const _disableColor = function(_renderTarget)\n    {\n        _renderTarget.noStroke();\n        _renderTarget.fill(255, 0);\n    };\n\n\n    // ---------------------------------------------------------------------------\n\n    //rect\n    p5.prototype.rectPattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.rect(...args);\n\n        const val = _modeAdjust(\n            arguments[0],\n            arguments[1],\n            arguments[2],\n            arguments[3],\n            this._renderer._rectMode\n        );\n\n        this._patternControler.applyPattern(val.x, val.y, val.w, val.h, this);\n\n        return r;\n    };\n\n    //square\n    p5.prototype.squarePattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.square(...args);\n\n        const val = _modeAdjust(\n            arguments[0],\n            arguments[1],\n            arguments[2],\n            arguments[2],\n            this._renderer._rectMode\n        );\n\n        this._patternControler.applyPattern(val.x, val.y, val.w, val.h, this);\n        return r;\n    };\n\n    //ellipse\n    p5.prototype.ellipsePattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.ellipse(...args);\n        \n        const val = _modeAdjust(\n            arguments[0],\n            arguments[1],\n            arguments[2],\n            arguments[3],\n            this._renderer._ellipseMode\n        );\n\n        this._patternControler.applyPattern(val.x, val.y, val.w, val.h, this);\n        return r;\n    };\n\n    \n    //arc\n    p5.prototype.arcPattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.arc(...args);\n\n        const val = _modeAdjust(\n            arguments[0],\n            arguments[1],\n            arguments[2],\n            arguments[3],\n            this._renderer._ellipseMode\n        );\n\n        this._patternControler.applyPattern(val.x, val.y, val.w, val.h, this);\n        return r;\n    };\n\n    \n    //circle\n    p5.prototype.circlePattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.circle(...args);\n\n        const val = _modeAdjust(\n            arguments[0],\n            arguments[1],\n            arguments[2],\n            arguments[2],\n            this._renderer._ellipseMode\n        );\n        this._patternControler.applyPattern(val.x, val.y, val.w, val.h, this);\n        return r;\n    };\n\n    \n    //triangle\n    p5.prototype.trianglePattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.triangle(...args);\n\n        //Calculates the drawing area of the pattern with the center of gravity.\n        const cx = (arguments[0] + arguments[2] + arguments[4]) / 3;\n        const cy = (arguments[1] + arguments[3] + arguments[5]) / 3;\n        const w = this.max([Math.abs(cx - arguments[0]), Math.abs(cx - arguments[2]), Math.abs(cx - arguments[4])]) * 2;\n        const h = this.max([Math.abs(cy - arguments[1]), Math.abs(cy - arguments[3]), Math.abs(cy - arguments[5])]) * 2;\n        this._patternControler.applyPattern(cx - w /2, cy - h / 2, w, h, this);\n        \n        //Calculates center position.(Not used)\n        /*\n        const minX = min(min(arguments[0], arguments[2]), arguments[4]);\n        const maxX = max(max(arguments[0], arguments[2]), arguments[4]);\n        const minY = min(min(arguments[1], arguments[3]), arguments[5]);\n        const maxY = max(max(arguments[1], arguments[3]), arguments[5]);\n        */\n        return r;\n    };\n\n    \n    //quad\n    p5.prototype.quadPattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.quad(...args);\n\n        const minX = this.min([arguments[0], arguments[2], arguments[4], arguments[6]]);\n        const maxX = this.max([arguments[0], arguments[2], arguments[4], arguments[6]]);\n        const minY = this.min([arguments[1], arguments[3], arguments[5], arguments[7]]);\n        const maxY = this.max([arguments[1], arguments[3], arguments[5], arguments[7]]);\n\n        this._patternControler.applyPattern(minX, minY, maxX - minX, maxY - minY, this);\n        return r;\n    };\n\n\n    //vertex\n    p5.prototype.beginShapePattern = function(...args)\n    {\n        const r = this.beginShape(...args);\n        this._patternVertexInfo.reset();\n        return r;\n    };\n\n    p5.prototype.beginContourPattern = function(...args)\n    {\n        return this.beginContour(...args);\n    };\n\n    p5.prototype.vertexPattern = function(...args)\n    {\n        const r = this.vertex(...args);\n        this._patternVertexInfo.addVertex(arguments[0], arguments[1]);\n        return r;\n    };\n\n    p5.prototype.curveVertexPattern = function(...args)\n    {\n        const r = this.curveVertex(...args);\n        this._patternVertexInfo.addCurveVertex(arguments[0], arguments[1]);\n        return r;\n    };\n\n    p5.prototype.bezierVertexPattern = function(...args)\n    {\n        const r = this.bezierVertex(...args);\n        this._patternVertexInfo.addBezierVertex(\n            arguments[0], arguments[1], \n            arguments[2], arguments[3],\n            arguments[4], arguments[5]\n        );\n        return r;\n    };\n\n    p5.prototype.quadraticVertexPattern = function(...args)\n    {\n        const r = this.quadraticVertex(...args);\n        this._patternVertexInfo.addQuadraticVertex(\n            arguments[0], arguments[1], \n            arguments[2], arguments[3]\n        );\n        return r;\n    };\n\n    p5.prototype.endContourPattern = function(...args)\n    {\n        return this.endContour(...args);\n    };\n\n    p5.prototype.endShapePattern = function(...args)\n    {\n        _disableColor(this);\n        const r = this.endShape(...args);\n        const area = this._patternVertexInfo.culclateArea();\n        this._patternControler.applyPattern(area.x, area.y, area.w, area.h, this);\n        return r;\n    };\n\n})();\n\n\n\n// ---------------------------------------------------------------------------\n// Pattern functions.\n// ---------------------------------------------------------------------------\n\nconst PTN = \n{\n    /**\n     * Noise pattern\n     * patternColors()[0]   base color\n     * patternColors()[1]   dot color\n     * @param {Number} _density  Density of dots. default = 0.2\n     * Constrained between 0 and 1.\n     */\n     noise : function(_density = 0.2)\n     {\n         const func = function(_w, _h, _rt = window)\n         {\n            const density = _rt.constrain(_density, 0, 1);\n            const c = _rt.patternColors();\n\n            const num = _w * _h * density;\n            const ns = 0.01;\n    \n            _rt.ellipseMode(_rt.CENTER);\n            _rt.rectMode(_rt.CORNER);\n            _rt.noStroke();\n\n            _rt.fill(c[0]);\n            _rt.rect(0, 0, _w, _h);\n    \n            _rt.fill(c[1 % c.length]);\n            for(let i = 0; i < num; i++){\n                const x = _rt.random(_w);\n                const y = _rt.random(_h);\n                const dia = _rt.noise(x * ns, y * ns) * 0.5 + 1;\n                _rt.ellipse(x, y, dia, dia);\n            }\n         }\n         return func;\n     },\n \n     /**\n      * Noise gradient pattern\n      * patternColors()[0]   base color\n      * patternColors()[1]   dot color\n      * @param {Number} _density  Density of dots. default = 0.2\n      */\n     noiseGrad : function(_density = 0.2)\n     {    \n         const func = function(_w, _h, _rt = window)\n         {\n            const density = _rt.min(1, _density);\n            const c = _rt.patternColors();\n\n            const num = _w * _h * density;\n            const ns = 0.01;\n\n            _rt.rectMode(_rt.CORNER);\n            _rt.ellipseMode(_rt.CENTER);\n            _rt.noStroke();\n    \n            _rt.fill(c[0]);\n            _rt.rect(0, 0, _w, _h);\n    \n            _rt.fill(c[1 % c.length]);\n            for(let i = 0; i < num; i++){\n                const x = _rt.abs(_rt.randomGaussian()) / 5 * _w;\n                const y = _rt.random(_h);\n                const dia = _rt.noise(x * ns, y * ns) * 0.5 + 1;\n                _rt.ellipse(x, y, dia, dia);\n            }\n         }\n         return func;\n     },\n\n    /**\n     * Stripe pattern\n     * Fill the colors of patternColors() in order.\n     * @param {Number} _space   Stripe space. default = 10\n     */\n    stripe : function(_space = 10)\n    {\n        const func = function(_w, _h, _rt = window)\n        {\n            _space = Math.abs(_space);\n            if(_space == 0)_space = 10;\n\n            const c = _rt.patternColors();\n\n            _rt.rectMode(_rt.CORNER);\n            _rt.noStroke();\n\n            let count = 0;\n\n            for(let x = 0; x <= _w + _space; x+= _space)\n            {\n                _rt.fill(c[count % c.length]);\n                _rt.rect(x, 0, Math.ceil(_space), _h);\n                count++;\n            }\n        }\n        return func;\n    },\n\n    /**\n     * Concentric circle stripe pattern.\n     * Fill the colors of patternColors() in order.\n     * @param {Number} _space      Stripe space. default = 10\n     * @param {Number} _minRadius  Minimum radius. default = 0\n     */\n    stripeCircle : function(_space = 25, _minRadius = 0)\n    {\n        const func = function(_w, _h, _rt = window)\n        {\n            _space = _rt.abs(_space);\n            if(_space == 0)_space = 25;\n\n            const c = _rt.patternColors();\n\n            const maxRadius = _rt.sqrt(_w * _w + _h * _h);\n            const num  = _rt.ceil((maxRadius - _minRadius) / _space);\n            \n            _rt.ellipseMode(_rt.CENTER);\n            _rt.noStroke();\n\n            for(let i = 0; i < num; i++)\n            {\n                _rt.fill(c[i % c.length]);\n                const radius = _minRadius + (num - 1 - i) * _space;\n                _rt.circle(_w / 2, _h / 2, radius * 2);\n            }\n        }\n        return func;\n    },\n\n    /**\n     * Concentric polygon stripe pattern.\n     * @param {Number} _vertNum     Number of vertices in a polygon,\n     *                              constrained between 3 and 20.    default = 3\n     * @param {Number} _space       Stripe space. default = 10\n     * @param {Number} _minRadius   Minimum radius. default = 0\n     */\n    stripePolygon : function(_vertNum = 3, _space = 25, _minRadius = 0)\n    {\n        const func = function(_w, _h, _rt = window)\n\t\t{\n            _space = _rt.abs(_space);\n            if(_space == 0)_space = 25;\n\n            const vNum = _rt.int(_rt.constrain(_vertNum, 3, 30));\n            const c = _rt.patternColors();\n\n            const maxRadius = _rt.sqrt(_w * _w + _h * _h);\n            const num  = _rt.ceil((maxRadius - _minRadius) / _space);\n\n            _rt.noStroke();\n\n            for(let i = 0; i < num; i++)\n            {\n                    _rt.fill(c[i % c.length]);\n                    const radius = _minRadius + (num - 1 - i) * _space;\n\n                    _rt.beginShape();\n                    for(let i = 0; i < vNum; i++)\n                    {\n                            const rad = i * Math.PI * 2 / vNum;\n                            const x = _w / 2 + Math.cos(rad) * radius;\n                            const y = _h / 2 + Math.sin(rad) * radius;\n                            _rt.vertex(x, y);\n                    }\n                    _rt.endShape(_rt.CLOSE);\n            }\n\t\t}\n\t\treturn func;\n    },\n\n\n    /**\n     * Radial stripe pattern.\n     * @param {Number} _angleSpan   Stripe angle space. default = PI / 4,\n     * specified in radians or degrees, depending on current angleMode\n     */\n    stripeRadial : function(_angleSpan = 1)\n    {\n        const func = function(_w, _h, _rt = window)\n        {\n            _angleSpan = _rt.abs(_angleSpan);\n            if(_angleSpan == 0)_angleSpan = 1;\n\n            const c = _rt.patternColors();\n            const tau = _rt._angleMode == _rt.DEGREES ? 360 : _rt.TAU;\n\n            _rt.ellipseMode(_rt.CENTER);\n            _rt.noStroke();\n\n            let count = 0;\n            const dia = _rt.sqrt(_w * _w + _h * _h);\n            for(let r = 0; r < tau; r += _angleSpan)\n            {\n                //Error measures\n                const endRad = r + _angleSpan > tau ? 0.00001 : r + _angleSpan;\n                _rt.fill(c[count % c.length]);\n                _rt.arc(_w / 2, _h /2, dia, dia, r, endRad + 0.0001);\n                count++;\n            }\n        }\n        return func;\n    },\n\n\n    /**\n     * Wave pattern\n     * patternColors()[0]       base color\n     * patternColors()[1]       wave color\n     * @param {Number} _waveW   Wave width. default = 100\n     * @param {Number} _waveH   Wave height. default = 20\n     * @param {Number} _space   Line spacing. default = 20 \n     * @param {Number} _weight  Line weight. default = 5 \n     */\n    wave : function(_waveW = 100, _waveH = 10, _space = 20, _weight = 5)\n    {\n        const func = function(_w, _h, _rt = window)\n        {\n            _space = _rt.abs(_space);\n            if(_space == 0)_space = 20;\n            _waveW = _rt.abs(_waveW);\n            if(_waveW == 0)_waveW = 100;\n\n            const c = _rt.patternColors();\n\n            const vertSpan = 3;\n            _rt.rectMode(_rt.CORNER);\n            _rt.noStroke();\n\n            _rt.fill(c[0]);\n            _rt.rect(0, 0, _w, _h);\n\n            const tileColours = c.slice(1);\n            let count = 0;\n            for(let y = -_waveH; y <= _h + _waveH; y+= _space)\n            {\n                _rt.fill(tileColours[count % tileColours.length])\n                _rt.beginShape();\n                \n                for(let x = 0; x < _w; x += vertSpan)\n                {\n                    const rad = x / _waveW * _rt.TAU;\n                    _rt.vertex(x, y + Math.sin(rad) * _waveH);\n                }\n                \n                _rt.vertex(_w, y + Math.sin(_w / _waveW * Math.PI * 2) * _waveH);\n                for(let x = _w; x > 0; x -= vertSpan)\n                {\n                    const rad = x / _waveW * Math.PI * 2;\n                    _rt.vertex(x, y + _weight + Math.sin(rad) * _waveH);\n                }\n                _rt.vertex(0, y + _weight + Math.sin(0) * _waveH);\n                \n                _rt.endShape(_rt.CLOSE);\n                count++;\n            }\n        }\n        return func;\n    },\n\n    /*\n    Private function.\n    Generate tiling pattern functions.\n    */\n    _customTiling : function(_spaceX, _spaceY, _tileFunc, _useOffset = false)\n    {\n        const func = function(_w, _h, _rt)\n        {\n            _spaceX = _rt.abs(_spaceX);\n            if(_spaceX == 0)_spaceX = 50;\n            _spaceY = _rt.abs(_spaceY);\n            if(_spaceY == 0)_spaceY = 50;\n\n            const c = _rt.patternColors();\n            _rt.rectMode(_rt.CORNER);\n            _rt.noStroke();\n\n            _rt.fill(c[0]);\n            _rt.rect(0, 0, _w, _h);\n\n            const tileColours = c.slice(1);\n            let yi = 0,\n                count = 0;\n            for(let y = 0; y <= _h + _spaceY /2; y += _spaceY)\n            {\n                let xi = 0;\n                let offset = yi % 2 == 1 && _useOffset ? -_spaceX / 2 : 0;\n                for(let x = offset; x <= _w + _spaceX /2; x += _spaceX)\n                {\n                    _rt.push();\n                    _rt.translate(x, y);\n                    _rt.fill(tileColours[count % tileColours.length])\n                    _tileFunc(_rt, xi, yi);\n                    _rt.pop();\n                    xi++;\n                    count++;\n                }\n                yi++;\n            }\n        }\n        return func;\n    },\n\n    /** \n     * Dot pattern \n     * patternColors()[0]       base color\n     * patternColors()[1]       Checked color\n     * @param {Number} _space   Dot spacing. default = 15\n     * @param {Number} _dia     Dot diameter. default = 15\n     */\n    dot : function(_space = 15, _dia = 7)\n    {\n        const func = PTN._customTiling(\n            _space,\n            _space,\n            function(_rt)\n            {\n                _rt.noStroke();\n                _rt.ellipseMode(_rt.CENTER);\n                _rt.circle(0, 0, _dia);\n            },\n            false\n        );\n        return func;\n    },\n\n     /**\n     * Checked pattern\n     * patternColors()[0]       base color\n     * patternColors()[1]       Checked color\n     * @param {Number} _checkW    Width of checkered pattern. default = 10\n     * @param {Number} _checkH    Height of checkered pattern (Optional)\n     */\n    checked : function(...args)\n    {\n        let w, h;\n        if(arguments.length == 0){ w = 10; h = 10;}\n        else if(arguments.length == 1){w = arguments[0]; h = w;}\n        else{w = arguments[0]; h = arguments[1];}\n\n        const func = PTN._customTiling(\n            w * 2,\n            h,\n            function(_rt)\n            {\n                _rt.noStroke();\n                _rt.rectMode(_rt.CORNER);\n                _rt.rect(0, 0, w, h);\n            },\n            true\n        );\n        return func;\n    },\n\n    /**\n     * Cross pattern\n     * patternColors()[1]       base color\n     * patternColors()[0]       line color\n     * @param {Number} _space   Line spacing. default = 20\n     * @param {Number} _weight  Line weight. default = 5\n     */\n    cross : function(_space = 20, _weight = 5)\n    {\n        const func = function(_w, _h, _rt = window)\n        {\n            const c = _rt.patternColors();\n            _rt.rectMode(_rt.CORNER);\n            _rt.fill(c[0]);\n            _rt.rect(0, 0, _w, _h);\n            \n            const tileColours = c.slice(1);\n            let count = 0;\n            for(let y = 0; y < _h; y+= _space) {\n                _rt.fill(tileColours[count % tileColours.length])\n                _rt.rect(0, y + _space / 2 - _weight /2, _w, _weight);\n                count++;\n            } \n            for(let x = 0; x < _w; x+= _space) {\n                _rt.fill(tileColours[count % tileColours.length])\n                _rt.rect(x + _space / 2 - _weight / 2, 0, _weight, _h); \n                count++;\n            }\n        }\n        return func;\n    },\n\n    /**\n     * Triangle pattern\n     * patternColors()[0]       base color\n     * patternColors()[1]       line color\n     * @param {Number} _triW  Triangle width. default = 20\n     * @param {Number} _triH  Triangle height. default = 20\n     */\n    triangle : function(_triW = 20, _triH = 20)\n    {\n        const func = PTN._customTiling(\n            _triW,\n            _triH,\n            function(_rt)\n            {\n                _rt.noStroke();\n                _rt.triangle(0, 0, _triW, 0, _triW /2, _triH);\n            },\n            true\n        );\n        return func;\n    }\n\n};\n\nexport { PTN };","// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction TriadicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 3){\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        hue = hue + 120 < 360 ? hue + 120 : hue - 240;\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction ComplementaryColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 2){\n        hue = hue + i * 180;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport { TetradicColourCalculator, TriadicColourCalculator, ComplementaryColourCalculator };","export default class PatternCell {\n    constructor(p5, x, y, width, height, palette, pattern, canExpand) {\n        this.p = p5;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.palette = palette;\n        this.pattern = pattern;\n        this.canExpand = canExpand;\n        this.patternColours = this.p.shuffle(this.palette);\n        this.patternActive = false;\n        this.p.patternColors();\n        this.patternAngle = this.p.int(this.p.random(4)) * this.p.PI / 4;\n    }\n\n    update() {\n        if(this.canExpand) {\n            this.width = this.width + this.p.width / 192;\n            this.height = this.height + this.p.height / 192;\n        }\n    }\n\n    draw() {\n        this.p.fill(this.palette[0]);\n        this.p.rect(this.x, this.y, this.width, this.height);\n        if(this.patternActive) {\n            this.p.patternColors(this.patternColours);\n            this.p.pattern(this.pattern);\n            this.p.patternAngle(this.patternAngle);\n            this.p.rectPattern(this.x, this.y, this.width, this.height);\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/patterns-no-6.7bcfa754.ogg\";","export default __webpack_public_path__ + \"static/media/patterns-no-6.e2df13db.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport { PTN } from \"./lib/p5.pattern\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport { TetradicColourCalculator } from \"./functions/ColourCalculators\";\nimport PatternCell from \"./classes/PatternCell\";\n\nimport audio from \"../audio/patterns-no-6.ogg\";\nimport midi from \"../audio/patterns-no-6.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[1].notes;\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1'); \n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.gridCoords = [];\n\n        p.gridCells = [];\n\n        p.expandingCellIndex = 0;\n\n        p.expandingCell = null;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.colorMode(p.HSB);\n            p.rectMode(p.CENTER);\n            p.background(0, 0, 100);\n\n            for (let i = 0; i < 3; i++) {\n                for (let j = 0; j < 3; j++) {\n                    p.gridCoords.push(\n                        {\n                            x: i * p.width / 3 + p.width / 6,\n                            y: j * p.height / 3 + p.height / 6,\n                        }\n                    )\n                }\n            }\n        }\n\n        \n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.background(0, 0, 100);\n\n                for (let i = 0; i < p.gridCells.length; i++) {\n                    const cell = p.gridCells[i];\n                    cell.draw(); \n                    cell.update(); \n                }\n\n                if(p.expandingCell) {\n                    p.expandingCell.draw();\n                    p.expandingCell.update();\n                }\n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue, duration } = note,\n                delayAmount = parseInt(duration * 1000) / p.gridCoords.length;\n            \n            if(currentCue % 4 === 1) {\n                p.expandingCellIndex = Math.floor(p.random(0, 9));\n                p.expandingCell = new PatternCell(\n                    p,\n                    p.gridCoords[p.expandingCellIndex].x,\n                    p.gridCoords[p.expandingCellIndex].y,\n                    p.width / 3,\n                    p.height / 3,\n                    TetradicColourCalculator(\n                        p,\n                        p.random(0, 360),\n                        p.random(50, 100),\n                        p.random(50, 100),\n                    ),\n                    p.randPattern(p.width / 3, [0,3,4])\n                );\n            } else if(currentCue % 2 === 0) {\n                p.expandingCell.patternActive = true;\n            } else if(currentCue % 4 === 3) {\n                p.expandingCell.patternActive = false;\n                p.expandingCell.canExpand = true;\n            }\n\n            const cells = p.shuffle([\n                ...p.gridCoords.slice(0, p.expandingCellIndex), \n                ...p.gridCoords.slice(p.expandingCellIndex + 1)\n            ]);\n\n            for (let i = 0; i < cells.length; i++) {\n                const { x, y } = cells[i];\n                setTimeout(\n                    function () {\n                        if(currentCue % 2 === 0) {\n                            p.gridCells[i].patternActive = true;\n                        }\n                        else {\n                            p.gridCells[i] = new PatternCell(\n                                p,\n                                x,\n                                y,\n                                p.width / 3,\n                                p.height / 3,\n                                TetradicColourCalculator(\n                                    p,\n                                    p.random(0, 360),\n                                    p.random(50, 100),\n                                    p.random(50, 100),\n                                ),\n                                p.randPattern(p.width / 3)\n                            );\n                        }\n                    },\n                    (delayAmount * i)\n                );\n            }\n        }\n\n        p.randPattern = (t, selectedIndexes = []) => {\n            const allPatterns = [\n                PTN.stripe(t / p.int(p.random(6, 12))),\n                PTN.stripeCircle(t / p.int(p.random(6, 12))),\n                PTN.stripePolygon(p.int(p.random(3, 7)),  p.int(p.random(6, 12))),\n                PTN.stripeRadial(p.TAU /  p.int(p.random(6, 30))),\n                PTN.wave(t / p.int(p.random(1, 3)), t / p.int(p.random(10, 20)), t / 5, t / 10),\n                PTN.dot(t / 10, t / 10 * p.random(0.2, 1)),\n                PTN.checked(t / p.int(p.random(5, 20)), t / p.int(p.random(5, 20))),\n                PTN.cross(t / p.int(p.random(10, 20)), t / p.int(p.random(20, 40))),\n                PTN.triangle(t / p.int(p.random(5, 20)), t / p.int(p.random(5, 20)))\n            ];\n                \n            let patterns = [];\n                \n\n            if(selectedIndexes.length) {\n                selectedIndexes.forEach(index => {\n                    patterns.push(allPatterns[index]);\n                });\n            } else {\n                patterns = allPatterns;\n            }\n\n            const randIndex = Math.floor(p.random(0, patterns.length));\n\n            return patterns[randIndex];\n        }\n\n        p.hasStarted = false;\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                        if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\n                            window.dataLayer.push(\n                                { \n                                    'event': 'play-animation',\n                                    'animation': {\n                                        'title': document.title,\n                                        'location': window.location.href,\n                                        'action': 'replaying'\n                                    }\n                                }\n                            );\n                            }\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\n                        window.dataLayer.push(\n                            { \n                                'event': 'play-animation',\n                                'animation': {\n                                    'title': document.title,\n                                    'location': window.location.href,\n                                    'action': 'start playing'\n                                }\n                            }\n                        );\n                        p.hasStarted = false\n                    }\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}